RPGWNN - Framework for browser based RPG game
Copyright (C) 2013  Reanimated Projects and Games Ltd

This file is part of RPGWNN

RPGWNN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

RPGWNN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

Contact information for Reanimated Projects and Games Ltd
can be found at http://rpgwnn.com/
------------------------------------------------------------------------

Installing the RPGWNN framework and prerequisites
=================================================

1. Pre-requisites
2. Perl modules
3. Database

------------------------------------------------------------------------

1. Pre-requisites
=================

A working installation of Perl, including the CPAN module.

MySQL (or another database supported by Dancer)

------------------------------------------------------------------------

2. Perl modules
===============

RPGWNN requires a few Perl modules to be installed in addition to
the core modules that come with any modern Perl installation.

We've tried to keep it to a minimum by using the Dancer micro
web application framework which itself has very few requirements.

PSGI is an interface between Perl web applications and web servers,
and Plack is a Perl module and toolkit that contains PSGI middleware,
helpers and adapters to web servers.

Information about Dancer can be found at http://perldancer.org/

Information about Plack can be found at http://plackperl.org/

Automatic installation of prerequisites
---------------------------------------

The "quick" method is to install the RPGWNN Bundle found in this
distribution. The only downside is that it may unneccessarily
upgrade modules that you may already have installed on your system.

  cd lib && perl -MCPAN -e 'install Bundle::RPGWNN'

Manual installation
-------------------

If you don't want to do the automated method, you can install the key
modules manually. Specifically, these modules are

    Dancer
    Plack
    Template   (Template Toolkit)
    YAML::Any  (replacement for YAML)

Installation of these modules and their dependencies can be done
(assuming you have CPAN installed) using the following command.

  perl -MCPAN -e 'install Plack; install Dancer;
    install Template; install YAML::Any;'

------------------------------------------------------------------------

Database
========

As a MySQL administrator account, you need to create a database and grant
permissions to the user.

By default, we use the database name "rpg_db", with a username of
"rpg_user" and password of "rpg_pass"
If you wish to change these defaults (and you should probably change
at least the password) simply replace them in the instructions below.

 CREATE DATABASE rpg_db;
 GRANT ALL ON rpg_db.* TO 'rpg_user'@'localhost'
    IDENTIFIED BY 'rpg_pass';

If all is well, you should be able to run the following command at
a shell prompt and connect to the database.

 mysql -urpg_user -prpg_pass rpg_db

If you change the database details, also ensure that config.yml is
updated with the new information.

Next, run the database schema deployment script to create the table
structure.

******* WARNING *** WARNING *** WARNING *** WARNING *** WARNING ********

This step _WILL_ destroy any tables that have already been created.

 perl scripts/deploy_db_schema.pl

Next generate a basic map - there must at least be a single map entry
at 0,0 for character creation to work due to the database foreign key
constraints. There is a script that will build a basic set of tiles
and map records.

 perl scripts/create_map.pl

Alternatively, you can run the following two SQL statements to create
a single tile and map record.

 INSERT INTO tiles SET name='path',description='A stone path.',
    background_image='bg_path.png',background_colour='#cccccc';
 INSERT INTO maps SET x=0,y=0,z=0,world=0,tile_id=last_insert_id(),
    name='path';


